SoundDetectionSensor_Tutorial

== Description ==
This tutorial will walk you through the use of a Microduino Sound Sensor. By the end of the tutorial, you will be able to connect the receiver to any Microduino capable system and program your build ot use the device in your project.

The Microduino Sound Detection Sensor is a small electret-condenser microphone. The vibrating sound is translated into a voltage that can be read by the mCookie Core module.

== Materials ==
{|class="wikitable"
|-
|Module||Number||Function
|-
|[[mCookie-CoreUSB]]||1||Core board 
|-
|[[mCookie-Hub]]||1||Sensor pin board 
|-
|[[Microduino-Sound]]||1||Sound detection sensor
|}
*Other Hardware Equipment 
**One USB cable 

[[File:mic-phone.jpg|600px|center]]

== Instructions ==
*Setup 1: Connect Microduino-Sound to the A0 analog port of the Hub module. Users can change the port according to personal needs, but must remember to also change this port in the software.
[[file:mCookie-Sound-sensor.JPG|600px|center]]

*Setup 2: Stack the CoreUSB and Hub, with the Sound module connected, to the computer with a USB cable.  
[[file:mCookie-Sound-pc.JPG|600px|center]]

== Code ==
*Open Arduino IDE and copy the following code into the IDE.  
<source lang="cpp">
#define mic_pin A0

int sensorValue;

// the setup routine runs once when you press reset:
void setup() {
  // initialize serial communication at 9600 bits per second:
  Serial.begin(9600);
  pinMode(mic_pin, INPUT);
}

// the loop routine runs over and over again forever:
void loop() {
  // read the input on analog pin 0:
  sensorValue = analogRead(mic_pin);
  // print out the value you read:
  Serial.print("Sound:");
  Serial.println(sensorValue);
  delay(100);        // delay in between reads for stability
}
</source>

*Choose the right port from Tools->Serial Port in Arduino IDE after compiling. 
[[file:uploadsound1.JPG|600px|center]]

*Upload the program directly.
[[file:uploadsound.JPG|600px|center]]

*After the upload, you can open the serial monitor. The displayed value reflects the current sound intensity. 
[[file:mCookie-Sound-res-sensor.JPG|600px|center]]

== Explanation of Functions ==
*pinMode( , );
The pinMode function is used with any generic sensor. This tells the program whether a particular pin, which you designate, is either used as Input or Output. In this program:
'''pinMode(mic_pin, INPUT);'''

This function sets the sensor connected to the mic_pin (which is pin A0 in this program) as an INPUT device. So, the Core module will take in input from the sensor. You can also set this to OUTPUT for devices that produce some sort of output, like an LED.

*analogRead();
The analogRead function takes the input from an analog sensor. The function will read a voltage value from the sensor (between 0 and 3.3V). The value returned will be an integer between 0 and 255, which is scaled to the voltage range. An analog value is continuous over some range (and with some resolution), as opposed to a digital signal, which can only be either ON or OFF.

In this software example, the returned value from using the analogRead function is stored in a variable we've named 'sensorValue':
'''sensorValue = analogRead(mic_pin);'''

== FAQ ==

== Additional Info ==

== Videos ==

=== Got a Suggestion for an Edit? ===
Email us at '''support@microduino.cc'''